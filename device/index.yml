openapi: '3.0.0'

x-tagGroups:
  - name: Device Configuration API
    tags:
      - general
      - time
      - route
      - ethernets
      - serials
      - cellulars
      - gps
      - wifi

info:
  version: '1.0'
  title: 'Device Configuration APIs'
  description: 'Device Configuration APIs'

servers:
  - url: http://127.0.0.1:59001/api/vi
  
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:
    GeneralInformation:
      title: Device gereral configuration
      properties:
        type:
          type: string
          description: Interface type.
          example: general
          readOnly: true
        deviceName:
          type: string
          description: device display name.
          example: MyThingsproEdge
        hostName:
          type: string
          description: device host name.
          example: Moxa
        firmwareVersion:
          type: string
          description: device firmware version.
          readOnly: true
        lastRebootTime:
          type: string
          description: device last reboot time.
          readOnly: true
        memorySize:
          type: integer
          description: device memory size(unit:byte).
          readOnly: true
        cpu:
          type: string
          description: device cpu information.
          readOnly: true
    RouteInformation:
      title: Device route configuration
      properties:
        type:
          type: string
          description: Interface type.
          example: route
          readOnly: true
        default:
          type: string
          description: default route display name.
          readOnly: true
        priorityList:
          type: array
          items:
            type: string
    $ref: './module.d/time.yaml#/components'
    AllEthernetInformation:
      title: All ethernet interfaces configuration
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EthernetItem'
        count:
          type: integer
          description: Array length.
          example: 1
    EthernetDhcp:
      title: Ethernet setting for dynamic ip.
      required:
      - enableDhcp
      - enable
      - wan
      properties:
        id:
          type: integer
        enableDhcp:
          type: boolean
        enable:
          type: boolean
        wan:
          type: boolean
    EthernetStaticIP:
      title: Ethernet setting for static ip.
      required:
      - ip
      - gateway
      - dns
      - enableDhcp
      - enable
      - wan
      properties:
        id:
          type: integer
        ip:
          type: string
        gateway:
          type: string
        dns:
          type: array
          items:
            type: string
        enableDhcp:
          type: boolean
        enable:
          type: boolean
        wan:
          type: boolean
    EthernetInformation:
      title: Ethernet interface configuration
      properties:
        data:
          $ref: '#/components/schemas/EthernetItem'
    EthernetItem:
      title: Ethernet configuration
      properties:
        type:
          type: string
          description: Interface type.
          example: ethernets
          readOnly: true
        id:
          type: integer
          description: Interface id.
          example: 1
          readOnly: true
        displayName:
          type: string
          description: Interface display name.
          readOnly: true
          example: LAN 1
        name:
          type: string
          description: Interface name.
          readOnly: true
          example: eth0
        wan:
          type: boolean
          description: Enable/disable wan.
          example: true
        enable:
          type: boolean
          description: Enable/disable interface.
          example: true
        status:
          type: boolean
          description: Interface current status.
          readOnly: true
          example: true
        enableDhcp:
          type: boolean
          description: Enable/disable dhcp.
          example: true
        broadcast:
          type: string
          description: Interface broadcast.
          readOnly: true
          example: 10.144.51.254
        dns:
          type: array
          description: Interface dns.
          items:
            type: string
            example: ["10.128.8.5","10.128.8.8"]
        gateway:
          type: string
          description: Interface gateway.
          example: 10.144.51.254
        ip:
          type: string
          description: Interface ip.
          example: 10.144.51.254
        netmask:
          type: string
          description: Interface netmask.
          example: 10.144.51.254
        mac:
          type: string
          description: Interface mac.
          readOnly: true
          example: 00:90:e8:70:a9:74
        subnet:
          type: string
          description: Interface subnet.
          readOnly: true
          example: 192.168.3.0
        speed:
          type: string
          description: Ethernet speed mode.
          enum: [10MBps-Half, 10MBbps-Full, 100MBps-Half, 100MBps-Full]
          example: 100MBps-Full
        GratuitousArp:
          type: object
          description: Gratuitous ARP.
          properties:
            enable:
              type: boolean
              example: false
            period:
              type: integer
              description: 'unit : Second.'
              example: 3
            arps:
              type: array
              items:
                type: object
                properties:
                  mac:
                    type: string
                  ip:
                    type: string

    AllSerialInformation:
      title: All serial interfaces configuration
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SerialItem'
        count:
          type: integer
          description: Array length.
          example: 1
    SerialInformation:
      title: Serial interface configuration
      properties:
        data:
          $ref: '#/components/schemas/SerialItem'
    SerialConfiguration:
      title: Serial setting.
      required:
      - mode
      properties:
        id:
          type: integer
        mode:
          type: string
    SerialItem:
      title: Serial Information
      properties:
        type:
          type: string
          description: Interface type.
          example: serials
          readOnly: true
        id:
          type: integer
          description: Interface id.
          example: 1
          readOnly: true
        mode:
          type: string
          description: Serial interface mode.
          enum: [rs232, rs422, rs485-2w, rs485-4w]
          example: rs232
        displayName:
          type: string
          description: Serial port display name.
          readOnly: true
        device:
          type: string
          description: Device path.
          readOnly: true
        buadRate:
          type: integer
          example: 9600
          default: 9600
        dataBits:
          type: integer
          example: 8
          default: 8
        stopBits:
          type: string
          enum: ['None', '1', '1.5', '2']
          example: 1
          default: 1
        parity:
          type: string
          enum: [Even, Mark, Odd, None, Space]
          example: None
          default: None
        flowControl:
          type: string
          enum: [Even, RTS/CTS, RTS/Toggle]
          example: RTS/CTS
          default: RTS/CTS
        fifo:
          type: boolean
          example: enable
          default: enable

    AllCellularInformation:
      title: All cellular interfaces configuration
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CellularItem'
        count:
          type: integer
          description: Array length.
    CellularInformation:
      title: Cellular interface configuration
      properties:
        data:
          $ref: '#/components/schemas/CellularItem'
    CellularItem:
      title: Cellular Information
      required:
      - enable
      properties:
        id:
          type: integer
          description: Interface id.
        type:
          type: string
          description: Interface type.
          example: cellulars
          readOnly: true
        name:
          type: string
          description: Interface name.
          readOnly: true
        capabilities:
          $ref: '#/components/schemas/CellularCapabilities'
        currentProfileId:
          type: integer
          description: Current used profile Id.
          readOnly: true
        mode:
          type: string
          description: Given cellular connection mode. Could be one of `"umts"`, `"lte"`.
          readOnly: true
        signal:
          type: object
          readOnly: true
          description: Cellular RF signal strength, include RSSI and EcIo.
          properties:
            csq:
              type: integer
              description: Signal quality, Only shows the first part of the response, RSSI(Received signal strength indicator).
            rssi:
              type: integer
              description: Cellular RF signal strength, in `dbm`. Value `0` indicates no SIM card found.
            ecio:
              type: integer
              description: The ratio of the received energy per chip (= code bit) and the interference level, given in `dBm`.
        operatorName:
          type: string
          description: Indicate current operator name if exist.
          readOnly: true
        lac:
          type: string
          description: Location area code.
          readOnly: true
        tac:
          type: string
          description: Tracking area code (LTE).
          readOnly: true
        nid:
          type: string
          description: Network ID (CDMA).
          readOnly: true
        cellId:
          type: string
          description: Cell ID.
          readOnly: true
        bid:
          type: string
          description: Base station ID (CDMA).
          readOnly: true
        iccId:
          type: string
          description: ICC ID of SIM card.
          readOnly: true
        imsi:
          type: string
          description: IMSI of SIM card.
          readOnly: true
        imei:
          type: string
          description: IMEI of cellular module.
          readOnly: true
        esn:
          type: string
          description: ESN of cellular module.
          readOnly: true
        pinRetryRemain:
          type: integer
          description: PIN Retry remaining.
          readOnly: true
        status:
          type: string
          description: |
            Indicate current status of cellular connection.
            - initializing: get module and SIM card info, unlock SIM card if necessary
            - nosim: no SIM card or unknown error with SIM card status
            - pin: SIM card is locked with a PIN code
            - ready: SIM card is ready for connect (unlocked or lock is disabled)
            - connecting: during connect state
            - connect_failure: connect failed or keepalive failed (if keepalive enabled)
            - connected: connect success with keepalive success or success with keepalive disabled
            - power_cycle: power cycle the module to recover issues
            - service_searching: roaming
            - service_attached: attached with a base station
            - pin_error: PIN code error
            - switching_carrier: module is switching carrier
          enum:
            - initializing
            - nosim
            - pin
            - puk
            - ready
            - connecting
            - connect_failure
            - connected
            - power_cycle
            - service_searching
            - service_attached
            - pin_error
            - switching_carrier
          readOnly: true
        mac:
          type: string
          readOnly: true
          description: The identical MAC address.
        ip:
          type: string
          description: IP address. `""` when not connected.
          readOnly: true
        netmask:
          type: string
          description: Subnet mask. `""` when not connected.
          readOnly: true
        gateway:
          type: string
          description: Gateway IP address. `""` when not connected.
          readOnly: true
        dns:
          type: array
          description: A list of DNS IP addresses. `[]` when not connected.
          items:
            type: string
          readOnly: true
        enable:
          type: boolean
          description: Enable Cellular Networking.
        profileTimeout:
          type: integer
          readOnly: true
          description: Retry timeout in seconds for switch profiles.
          minimum: 60
          maximum: 86399
        profiles:
          type: array
          description: Profiles for redundency
          items:
            $ref: '#/components/schemas/CellularProfile'
        keepalive:
          $ref: '#/components/schemas/CellularKeepalive'
    CellularCapabilities:
      title: Cellular Capabilities
      readOnly: true
      properties:
        sim:
          type: array
          items:
            type: integer
          readOnly: true
        carriers:
          type: array
          items:
            type: string
          readOnly: true
    CellularProfile:
      title: Cellular Profile
      type: object
      required:
      - id
      - name
      - pdpContext
      properties:
        id:
          type: integer
          description: Identifier for an Cellular interface.
        name:
          type: string
          description: Alias name for the profile.
          minLength: 0
          maxLength: 100
        pdpContext:
          type: object
          description: PDP context data for dialing up to Cellular Network.
          required:
            - static
          properties:
            static:
              type: boolean
              description: Use static APN or dynamic.
            id:
              type: integer
              description: Specifies PDP context id.
              minimum: 1
              maximum: 16
            apn:
              type: string
              description: Edit APN of the specified PDP context.
            type:
              type: string
              description: Indicate the PDP type to use.
              enum:
                - ipv4
                - ipv6
                - ipv4v6
            auth:
              type: object
              description: The negotiated authentication.
              required:
                - protocol
              properties:
                protocol:
                  type: string
                  description: The negotiated authentication protocol.
                  enum:
                    - none
                    - chap
                    - pap
                    - both
                username:
                  type: string
                  description: Username for PAP and/or CHAP.
                  minLength: 0
                  maxLength: 255
                password:
                  type: string
                  description: Password for PAP and/or CHAP.
                  minLength: 0
                  maxLength: 255
        pinCode:
          type: string
          description: PIN code of SIM card. Takes no effect when SIM card PIN weren't not set.
        init:
          type: array
          description: Initialize process before executing the profile.
            - sim:\<sim-slot\>
            - carrier:\<carrier\>
          items:
            type: string
    CellularKeepalive:
      title: Keepalive Settings
      type: object
      properties:
        enable:
          type: boolean
          description: Enable/disable Cellular connection keep-alive by ping.
        targetHost:
          type: string
          description: IP address to ping.
        intervalSec:
          type: integer
          minimum: 60
          maximum: 86399
          description: Check alive interval.
        reboot:
          $ref: '#/components/schemas/CellularKeepaliveReboot'
    CellularKeepaliveReboot:
      title: Reboot to Keepalive
      type: object
      description: Reboot system while check alive failed after a defined cycle(s).
      required:
      - enable
      - cycles
      properties:
        enable:
          type: boolean
          description: Enable/disable reboot policy for check alive failed.
        cycles:
          type: integer
          minimum: 1
          maximum: 48
          description: Define cycles to check if reboot is required; a cycle is a global value defined by system, default should be 20 minutes.

    AllGpsInformation:
      title: All GPS interfaces configuration
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GpsItem'
        count:
          type: integer
          description: Array length.
          example: 1
    GpsInformation:
      title: GPS interface configuration
      properties:
        data:
          $ref: '#/components/schemas/GpsItem'
    GpsItem:
      title: GPS Information
      properties:
        type:
          type: string
          description: Interface type.
          example: gps
          readOnly: true
        id:
          type: integer
          description: Interface id.
          example: 1
          readOnly: true
        enable:
          type: boolean
          description: Enable/disable gps. Disable is manual mode
          example: true
        interface:
          type: string
          description: Device path.
          readOnly: true
          example: /dev/ttyM0
        mode:
          type: string
          description: gps mode.
          enum:
            - manual
            - auto
          example: manual
        location:
          $ref: '#/components/schemas/GpsLocation'
    GpsSetMode:
      title: Enable GPS manul mode.
      required:
      - enable
      - mode
      properties:
        id:
          type: integer
        enable:
          type: boolean
          example: true
        mode:
          type: string
          example: manual
        location:
          $ref: '#/components/schemas/GpsLocation'
    GpsLocation:
      type: object
      description: Location information, with `latitude` and `longitude` data.
      properties:
        lat:
          type: number
          format: float
          description: latitude
          default: 0
          example: 23.5
        lng:
          type: number
          format: float
          description: longitude
          default: 0
          example: 121.2

    AllWifiInformation:
      title: All WiFi interfaces configuration
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WifiItem'
        count:
          type: integer
          description: Array length.
    WifiInformation:
      title: WiFi interface configuration
      properties:
        data:
          $ref: '#/components/schemas/WifiItem'
    WifiItem:
      title: Wifi Information
      required:
      - type
      - enable
      - mode
      properties:
        type:
          type: string
          description: Interface type.
          example: wifi
        id:
          type: integer
          description: Interface id.
        name:
          type: string
          description: Interface name.
          readOnly: true
        product:
          type: string
          description: Product model of the WiFi module.
          readOnly: true
        mode:
          type: string
          description: Given WiFi interface mode. Could be one of `"ap"`, `"client"`.
        capabilities:
          type: array
          description: Indicate current capability that module supports.
          readOnly: true
          items:
            type: string
            enum:
            - ap
            - client
        enable:
          type: boolean
          description: Enable WiFi Networking.
        ap:
          type: object
          description: Configuration of WiFi AP mode.
          required:
          - mode
          - ssid
          - channel
          - security
          properties:
            enableBlacklist:
              type: boolean
              description: Using blacklist or not.
            mode:
              type: string
              enum: ["bg", "bgn", "ac"]
            ssid:
              type: string
              description: SSID of a WiFi AP.
            channel:
              type: integer
            security:
              type: object
              required:
              - mode
              properties:
                mode:
                  type: string
                  enum: ["none", "wpa", "wpa2", "wpa/wpa2", "eap"]
                encryption:
                  type: string
                  enum: ["tkip", "aes", "tkip/aes"]
                password:
                  type: string
                  description: ASCII passphrase (8 ~ 63) or HEX pre-shared key (64) for WPA-Personal, or password for Radius.
                radiusServerIp:
                  type: string
                  pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                radiusServerPort:
                  type: integer
                  minimum: 1
                  maximum: 65535
                radiusSharedSecret:
                  type: string
            broadcastSsid:
              type: boolean
            shortPreamble:
              type: boolean
            beacon:
              type: integer
            ip:
              type: string
              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
              description: IP address.
            netmask:
              type: string
              pattern: ^(254|252|248|240|224|192|128)\.0\.0\.0|255\.(254|252|248|240|224|192|128|0)\.0\.0|255\.255\.(254|252|248|240|224|192|128|0)\.0|255\.255\.255\.(254|252|248|240|224|192|128|0)
              description: Subnet mask.
            rfType:
              type: string
              enum: [Auto, 802.11a, 802.11b/g, 802.11a/n, 802.11b/g/n]
              example: Auto
              default: Auto
            roaming:
              type: object
              properties:
                enable:
                  type: boolean
                  example: false
                  default: false
                threshold:
                  type: integer
        client:
          type: object
          description: Configuration of WiFi client mode
          required:
          - enableDhcp
          - networks
          - checkalive
          properties:
            enableDhcp:
              type: boolean
              description: |
                Enable (`true`) the dhcp client or using the static IP (`false`).
            networks:
              type: array
              description: List of networks for WiFi client to connect.
              items:
                type: object
                description: A WiFi AP configuration.
                required:
                - ssid
                properties:
                  priority:
                    description: This field can be used to give higher priority for credentials  (and similarly in struct wpa_ssid for network blocks) to change the  Interworking automatic networking selection behavior. Default is `0`.
                    type: integer
                  ssid:
                    type: string
                    description: SSID of a WiFi AP.
                  bssid:
                    type: string
                    description: BSSID (MAC) of a WiFi AP.
                  security:
                    description: Security of the WiFi AP.
                    type: string
                    enum:
                    - none
                    - wep
                    - wpa
                    - wpa2
                    - wpa/wpa2
                    - eap
                  password:
                    type: string
                    description: Password of access point, Could be one of 
                      1. WEP key. Length 5, 13, 16, 29 for ASCII keys or 10, 26, 32, 58 for HEX keys.
                      2. WPA-PSK key. ASCII passphrase (8 ~ 63) or HEX pre-shared key (64).
                      3. EAP key. Max length 64
                  username:
                    type: string
                    description: Username for EAP (Enterprise Access Point).
                    maxLength: 64
            ip:
              type: string
              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
              description: IP address. `""` when not connected.
            netmask:
              type: string
              pattern: ^(254|252|248|240|224|192|128)\.0\.0\.0|255\.(254|252|248|240|224|192|128|0)\.0\.0|255\.255\.(254|252|248|240|224|192|128|0)\.0|255\.255\.255\.(254|252|248|240|224|192|128|0)
              description: Subnet mask. `""` when not connected.
            gateway:
              type: string
              pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
              description: Gateway IP address. `""` when not connected.
            dns:
              type: array
              description: A list of DNS IP addresses. `[]` when not connected.
              items:
                type: string
                pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
            checkalive:
              type: object
              description: Keep-alive configuration.
              required:
              - enable
              properties:
                enable:
                  type: boolean
                  description: Enable/disable WiFi connection keep-alive by ping.
                targetHost:
                  type: string
                  description: IP address to ping.
                intervalSec:
                  type: integer
                  description: Check alive interval.

security:
  - bearerAuth: []

paths:
  /device/general:
    get:
      description: Get device general configuration.
      tags: ["device", "general"]
      responses:
        200:
          description: Device general configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralInformation'
              example:
                type: general
                deviceName: MyThingsProEdge
                hostName: Moxa
                modelName: UC-8112A-ME-T-LX-EU
                firmwareVersion: 1.0
                lastRebootTime: "2019-06-27T10:10:16+08:00"
                memorySize: 1056120832
                cpu: ARMv7 Processor rev 2 (v7l)
    patch:
      tags: ["device", "general"]
      description: Update device general configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                deviceName:
                  type: string
                  description: device display name.
                  example: MyThingsproEdge
                hostName:
                  type: string
                  description: device host name.
                  example: Moxa
            examples:
              update device display name:
                value:
                  deviceName: MyDevice
              update device host name:
                value:
                  hostName: MyHost
      responses:
        200:
          description: Device general configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllEthernetInformation'
              example:
                type: general
                deviceName: MyDevice
                hostName: MyHost
                modelName: UC-8112A-ME-T-LX-EU
                firmwareVersion: 1.0
                lastRebootTime: "2019-06-27T10:10:16+08:00"
                memorySize: 1056120832
                cpu: ARMv7 Processor rev 2 (v7l)
  /device/route:
    get:
      description: Get device route configuration.
      tags: ["device", "route"]
      responses:
        200:
          description: Device route configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteInformation'
              example:
                type: route
                default: LAN 1
                priorityList:
                  - LAN 1
                  - wwan0
                  - LAN 2
    patch:
      tags: ["device", "route"]
      description: Update device route configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                priorityList:
                  type: string
                  description: device route priority list.
            example:
              priorityList:
                - LAN 2
                - wwan0
                - LAN 1
      responses:
        200:
          description: Device route configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteInformation'
              example:
                type: route
                default: LAN 2
                priorityList:
                  - LAN 2
                  - wwan0
                  - LAN 1
  $ref: './module.d/time.yaml#/paths'
  /device/ethernets:
    get:
      description: Get ethernet interfaces configuration.
      tags: ["device", "ethernets"]
      responses:
        200:
          description: All ethernet interfaces configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllEthernetInformation'
              example:
                data:
                  - subnet: 192.168.3.0
                    type: ethernet
                    mac: '00:90:e8:70:a9:74'
                    netmask: 255.255.252.0
                    ip: 10.144.49.164
                    displayName: LAN 1
                    gateway: 10.144.51.254
                    broadcast: 10.144.51.255;
                    dns:
                      - 10.128.8.5
                      - 10.128.8.8
                    enableDhcp: true
                    status: true
                    id: 1
                    name: eth0
                    wan: true
                    enable: true
                count: 1
    patch:
      tags: ["device", "ethernets"]
      description: Update ethernet interfaces configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/EthernetDhcp'
                  - $ref: '#/components/schemas/EthernetStaticIP'
            example:
              - id: 1
                wan: true
                enableDhcp: true
                enable: true
              - id: 2
                enableDhcp: false
                enable: true
                wan: true
                ip: 1.2.3.4
                gateway: 5.6.7.8
                dns:
                  - 1.1.1.1
                  - 1.1.1.2
      responses:
        200:
          description: Device ethernet configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllEthernetInformation'
              example:
                data:
                  - subnet: 1.1.1.1
                    type: ethernets
                    mac: '01:01:01:01:01:01'
                    netmask: 255.255.255.255
                    ip: 2.2.2.2
                    displayName: LAN 1
                    gateway: 3.3.3.3
                    broadcast: 1.1.1.1
                    dns:
                      - 1.1.1.1
                      - 1.1.1.2
                    enableDhcp: true
                    status: true
                    id: 1
                    name: eth0
                    wan: true
                    enable: true
                  - subnet: 2.2.2.2
                    type: ethernets
                    mac: '02:02:02:02:02:02'
                    netmask: 255.255.255.255
                    ip: 3.3.3.3
                    displayName: LAN 2
                    gateway: 3.3.3.3
                    broadcast: 1.1.1.1
                    dns:
                      - 1.1.1.1
                      - 1.1.1.2
                    enableDhcp: false
                    status: true
                    id: 1
                    name: eth0
                    wan: true
                    enable: true
                count: 2
  /device/ethernets/{id}:
    parameters:
      - name: id
        in: path
        description: Ethernet interface id.
        schema:
          type: integer
        required: true
        example: 1
    get:
      description: Get ethernet interface configuration.
      tags: ["device", "ethernets"]
      responses:
        200:
          description: Ethernet interface configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthernetInformation'
              example:
                data:
                  subnet: 192.168.3.0
                  type: ethernet
                  mac: '00:90:e8:70:a9:74'
                  netmask: 255.255.252.0
                  ip: 10.144.49.164
                  displayName: LAN 1
                  gateway: 10.144.51.254
                  broadcast: 10.144.51.255;
                  dns:
                    - 10.128.8.5
                    - 10.128.8.8
                  enableDhcp: true
                  status: true
                  id: 1
                  name: eth0
                  wan: true
                  enable: true
    patch:
      description: Update ethernet interface configuration.
      tags: ["device", "ethernets"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/EthernetDhcp'
                - $ref: '#/components/schemas/EthernetStaticIP'
            examples:
              dhcp:
                value:
                  wan: true
                  enableDhcp: true
                  enable: true
              static:
                value:
                  enableDhcp: false
                  enable: true
                  wan: true
                  ip: 1.2.3.4
                  gateway: 5.6.7.8
                  dns:
                    - 1.1.1.1
                    - 1.1.1.2
      responses:
        200:
          description: Ethernet interface configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthernetInformation'
              example:
                data:
                  subnet: 192.168.3.0
                  type: ethernet
                  mac: '00:90:e8:70:a9:74'
                  netmask: 255.255.252.0
                  ip: 10.144.49.164
                  displayName: LAN 1
                  gateway: 10.144.51.254
                  broadcast: 10.144.51.255;
                  dns:
                    - 10.128.8.5
                    - 10.128.8.8
                  enableDhcp: true
                  status: true
                  id: 1
                  name: eth0
                  wan: true
                  enable: true
  /device/serials:
    get:
      description: Get serial interfaces configuration.
      tags: ["device", "serials"]
      responses:
        200:
          description: All serial configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllSerialInformation'
              example:
                data:
                  - type: serials
                    mode: rs232
                    id: 1
                    displayName: PORT 1
                    device: /dev/ttyM0
                  - type: serials
                    mode: rs232
                    id: 2
                    displayName: PORT 2
                    device: /dev/ttyM1
                count: 2
    patch:
      description: Update serial interfaces configuration.
      tags: ["device", "serials"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SerialConfiguration'
            example:
              - id: 1
                mode: rs232
              - id: 2
                mode: rs485-2w
      responses:
        200:
          description: All serial configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllSerialInformation'
              example:
                data:
                  - type: serials
                    mode: rs232
                    id: 1
                    displayName: PORT 1
                    device: /dev/ttyM0
                  - type: serials
                    mode: rs485-2w
                    id: 2
                    displayName: PORT 2
                    device: /dev/ttyM1
                count: 2
  /device/serials/{id}:
    parameters:
      - name: id
        in: path
        description: Serial interface id.
        schema:
          type: integer
        required: true
        example: 1
    get:
      description: Get serial interface configuration.
      tags: ["device", "serials"]
      responses:
        200:
          description: Serial interface configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialInformation'
              example:
                data:
                  type: serials
                  mode: rs232
                  id: 1
                  displayName: PORT 1
                  device: /dev/ttyM0
    patch:
      description: Update serial interface configuration.
      tags: ["device", "serials"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialConfiguration'
            example:
              mode: rs232
      responses:
        200:
          description: Serial interface configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialInformation'
              example:
                data:
                  type: serial
                  mode: rs232
                  id: 1
                  displayName: PORT 1
                  device: /dev/ttyM0
  /device/cellulars:
    get:
      description: Get cellular interfaces configuration.
      tags: ["device", "cellulars"]
      responses:
        200:
          description: All cellular interfaces 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllCellularInformation'
              example: 
                $ref: '#/externalDocs/x-mocks/AllCellularInformation'
    patch:
      tags: ["device", "cellulars"]
      description: Update cellular interfaces configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CellularItem'
            example:
              - id: 1
                enable: true
                keepalive:
                  intervalSec: 60
                  enable: true
                  targetHost: 8.8.8.8
                profiles:
                - id: 1
                  pinCode: '0000'
                  init:
                  - sim:1
                  name: SIM1
                  pdpContext:
                    static: true
                    apn: internet
                    id: 1
                    auth:
                      protocol: none
                      username: ''
                      password: ''
                    type: ipv4
      responses:
        200:
          description: Device cellular configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllCellularInformation'
              example:
                $ref: '#/externalDocs/x-mocks/AllCellularInformation'
  /device/cellulars/{id}:
    parameters:
      - name: id
        in: path
        description: Cellular interface id.
        schema:
          type: integer
        required: true
    get:
      description: Get cellular interface configuration.
      tags: ["device", "cellulars"]
      responses:
        200:
          description: Cellular interface configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellularInformation'
              example:
                $ref: '#/externalDocs/x-mocks/CellularInformation'
    patch:
      description: Update cellular configuration.
      tags: ["device", "cellulars"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CellularItem'
            example:
              enable: true
              keepalive:
                intervalSec: 60
                enable: true
                targetHost: 8.8.8.8
              profiles:
              - id: 1
                pinCode: '0000'
                init:
                - sim:1
                name: SIM1
                pdpContext:
                  static: true
                  apn: internet
                  id: 1
                  auth:
                    protocol: none
                    username: ''
                    password: ''
                  type: ipv4
      responses:
        200:
          description: Cellular interface configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellularInformation'
              example:
                $ref: '#/externalDocs/x-mocks/CellularInformation'
  /device/gps:
    get:
      description: Get gps interfaces configuration.
      tags: ["device", "gps"]
      responses:
        200:
          description: All gps configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllGpsInformation'
              example:
                data:
                  - id: 1
                    type: gps
                    enable: true
                    mode: manual
                    interface: /dev/ttyUSB0
                    location:
                      lat: 23.5
                      lng: 121.2
                count: 1
    patch:
      description: Update gps interfaces configuration.
      tags: ["device", "gps"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GpsSetMode'
            examples:
              set manual mode and set lat/lng value:
                value:
                  - id: 1
                    mode: manual
                    enable: true
                    location:
                      lat: 23.5
                      lng: 121.2
              set auto mode and reset lat/lng value:
                value:
                  - id: 1
                    mode: auto
                    enable: true
      responses:
        200:
          description: All gps configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllGpsInformation'
              examples:
                manual:
                  value:
                    data:
                      - id: 1
                        type: gps
                        mode: manual
                        enable: true
                        interface: /dev/ttyUSB0
                        location:
                          lat: 23.5
                          lng: 121.2
                    count: 1
                auto:
                  value:
                    data:
                      - id: 1
                        type: gps
                        mode: auto
                        enable: true
                        interface: /dev/ttyUSB0
                        location:
                          lat: 0
                          lng: 0
                    count: 1
  /device/gps/{id}:
    parameters:
      - name: id
        in: path
        description: Interface id.
        schema:
          type: integer
        required: true
    get:
      description: Get gps interface configuration.
      tags: ["device", "gps"]
      responses:
        200:
          description: GPS interface configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GpsInformation'
              example:
                data:
                  id: 1
                  type: gps
                  enable: true
                  mode: auto
                  interface: /dev/ttyUSB0
                  location:
                    lat: 23.5
                    lng: 121.2
    patch:
      description: Update gps interface configuration.
      tags: ["device", "gps"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GpsSetMode'
            examples:
              set manual mode and set lat/lng value:
                value:
                  mode: manual
                  enable: true
                  location:
                    lat: 23.5
                    lng: 121.2
              set auto mode and reset lat/lng value:
                value:
                  mode: auto
                  enable: true
      responses:
        200:
          description: gps interface configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GpsInformation'
              examples:
                manual:
                  value:
                    data:
                      - id: 1
                        type: gps
                        mode: manual
                        enable: true
                        interface: /dev/ttyUSB0
                        location:
                          lat: 23.5
                          lng: 121.2
                    count: 1
                auto:
                  value:
                    data:
                      - id: 1
                        type: gps
                        mode: auto
                        enable: true
                        interface: /dev/ttyUSB0
                        location:
                          lat: 0
                          lng: 0
                    count: 1
  /device/wifi:
    get:
      description: Get wifi interfaces configuration.
      tags: ["device", "wifi"]
      responses:
        200:
          description: All wifi interfaces configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllWifiInformation'
              example:
                $ref: '#/externalDocs/x-mocks/AllWifiInformation'
    patch:
      description: Update wifi interfaces configuration.
      tags: ["device", "wifi"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllWifiInformation'
            example:
              $ref: '#/externalDocs/x-mocks/AllWifiInformation'
      responses:
        200:
          description: All wifi interfaces configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllWifiInformation'
              example:
                $ref: '#/externalDocs/x-mocks/AllWifiInformation'
  /device/wifi/{id}:
    parameters:
      - name: id
        in: path
        description: Interface id.
        schema:
          type: integer
        required: true
    get:
      description: Get WiFi interface configuration.
      tags: ["device", "wifi"]
      responses:
        200:
          description: WiFi interface configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WifiInformation'
              example:
                $ref: '#/externalDocs/x-mocks/WifiInformation'
    patch:
      description: Update WiFi interface configuration.
      tags: ["device", "wifi"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WifiInformation'
            example:
                $ref: '#/externalDocs/x-mocks/WifiInformation'
      responses:
        200:
          description: WiFi interface configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WifiInformation'
              example:
                $ref: '#/externalDocs/x-mocks/WifiInformation'

externalDocs:
  url: '#'
  x-mocks:
    AllCellularInformation:
      {
        "data" : [
          {
            "currentProfileId": 1,
            "ip": "",
            "tac": "",
            "type": "cellular",
            "operatorName": "",
            "keepalive": {
              "intervalSec": 60,
              "enable": true,
              "reboot": {
                "enable": false,
                "cycles": 1
              },
              "targetHost": "8.8.8.8"
            },
            "capabilities": {
              "sim": [
                1
              ],
              "carriers": []
            },
            "id": 1,
            "gateway": "",
            "profileTimeout": 120,
            "esn": "",
            "imsi": "",
            "status": "power_cycle",
            "enable": false,
            "dns": [],
            "bid": "",
            "nid": "",
            "lac": "",
            "mac": "00:00:11:12:13:14",
            "imei": "359841080332053",
            "cellId": "",
            "name": "wwan0",
            "displayName": "wwan0",
            "signal": {
              "rssi": 0,
              "rsrq": 0,
              "csq": 0,
              "ecio": 0
            },
            "pinRetryRemain": -1,
            "netmask": "",
            "profiles": [
              {
                "pinCode": "0000",
                "init": ["sim:1"],
                "id": 1,
                "name": "SIM1",
                "pdpContext": {
                  "static": true,
                  "apn": "internet",
                  "id": 1,
                  "auth": {
                    "protocol": "none",
                    "username": "",
                    "password": ""
                  },
                  "type": "ipv4"
                }
              }
            ],
            "mode": "",
            "iccId": ""
          }
        ],
        "count" : 1
      }
    CellularInformation:
      {
        "data" : {
          "currentProfileId": 1,
          "ip": "",
          "tac": "",
          "type": "cellular",
          "operatorName": "",
          "keepalive": {
            "intervalSec": 60,
            "enable": true,
            "reboot": {
              "enable": false,
              "cycles": 1
            },
            "targetHost": "8.8.8.8"
          },
          "capabilities": {
            "sim": [
              1
            ],
            "carriers": []
          },
          "id": 1,
          "gateway": "",
          "profileTimeout": 120,
          "esn": "",
          "imsi": "",
          "status": "power_cycle",
          "enable": false,
          "dns": [],
          "bid": "",
          "nid": "",
          "lac": "",
          "mac": "00:00:11:12:13:14",
          "imei": "359841080332053",
          "cellId": "",
          "name": "wwan0",
          "displayName": "wwan0",
          "signal": {
            "rssi": 0,
            "rsrq": 0,
            "csq": 0,
            "ecio": 0
          },
          "pinRetryRemain": -1,
          "netmask": "",
          "profiles": [
            {
              "pinCode": "0000",
              "init": ["sim:1"],
              "id": 1,
              "name": "SIM1",
              "pdpContext": {
                "static": true,
                "apn": "internet",
                "id": 1,
                "auth": {
                  "protocol": "none",
                  "username": "",
                  "password": ""
                },
                "type": "ipv4"
              }
            }
          ],
          "mode": "",
          "iccId": ""
        }
      }
    AllWifiInformation:
      {
        "data" : [
          {
            "id": 1,
            "name": "wlan0",
            "type": "wifi",
            "product": "WPEQ-353ACNI",
            "capabilities": ["client", "ap"],
            "mode": "client",
            "enable": false,
            "client": {
              "enableDhcp": true,
              "networks": [],
              "checkalive": {
                "enable": false,
                "targetHost": "8.8.8.8",
                "intervalSec": 60
              }
            },
            "ap": {
              "mode": "bg",
              "ssid": "moxa-test1",
              "channel": 11,
              "security": {
                "mode": "none"
              },
              "ip": "192.168.5.127",
              "netmask": "255.255.255.0"
            }
          }
        ],
        "count" : 1
      }
    WifiInformation:
      {
        "data" : {
          "id": 1,
          "name": "wlan0",
          "type": "wifi",
          "product": "WPEQ-353ACNI",
          "capabilities": ["client", "ap"],
          "mode": "client",
          "enable": false,
          "client": {
            "enableDhcp": true,
            "networks": [],
            "checkalive": {
              "enable": false,
              "targetHost": "8.8.8.8",
              "intervalSec": 60
            }
          },
          "ap": {
            "mode": "bg",
            "ssid": "moxa-test1",
            "channel": 11,
            "security": {
              "mode": "none"
            },
            "ip": "192.168.5.127",
            "netmask": "255.255.255.0"
          }
        }
      }
